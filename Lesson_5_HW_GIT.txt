1. Создайте текстоовый файл как в первом ДЗ по Terminal.  vim hw_git.txt
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.  
 https://github.com/mikhvas/JSON
 5. Клонировать репозиторий JSON на локальный компьютер. 
 //git clone https://github.com/mikhvas/JSON
 6. Внутри локального JSON создать файл “new.json”.
 //vim nwe.json
 7. Добавить файл под гит.                     
 //git add nwe.json
 8. Закоммитить файл.                          
 //git commit -m "create file nwe.json"
 9. Отправить файл на внешний GitHub репозиторий. 
 //git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.  
 //vim nwe.json
 11. Отправить изменения на внешний репозиторий.     
 //git add nwe.json //git commit -m "change file nwe.json  //git push
 12. Создать файл preferences.json 
 // vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 // https://github.com/mikhvas/JSON/blob/main/preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 // vim skills.json 
 //https://github.com/mikhvas/JSON/blob/main/skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.
 // git add. 
 // git commit -m "add 2 file"
 // git push
 16. На веб интерфейсе создать файл bug_report.json.
 // https://github.com/mikhvas/JSON/blob/main/bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 // https://github.com/mikhvas/JSON/blob/main/bug_report.json
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 // https://github.com/mikhvas/JSON/blob/main/bug_report.json
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 // https://github.com/mikhvas/JSON/blob/main/bug_report.json
 20. Синхронизировать внешний и локальный репозиторий JSON
 // git pull


XML
 21. Создать внешний репозиторий c названием XML
 https://github.com/mikhvas/XML 
 22. Клонировать репозиторий XML на локальный компьютер.  
 //git clone https://github.com/mikhvas/XML
 23. Внутри локального XML создать файл “new.xml”.         
 //  vim new.xml
 24. Добавить файл под гит.                                
 //git add new.xml
 25. Закоммитить файл.                                       
 //git commite -m "create file new.xml"
 26. Отправить файл на внешний GitHub репозиторий.           
 // git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 // vim new.xml
 // https://github.com/mikhvas/XML/blob/main/new.xml
 28. Отправить изменения на внешний репозиторий.
 //git add new.xml //git commit -m "change file new.xml  //git push
 29. Создать файл preferences.xml
 // vim preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 // https://github.com/mikhvas/XML/blob/main/preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 // vim skills.xml
 // https://github.com/mikhvas/XML/blob/main/skills.xml
 32. Сделать коммит в одну строку.  
 //git commit -am
 33. Отправить сразу 2 файла на внешний репозиторий.  
 //git push
 34. На веб интерфейсе создать файл bug_report.xml.
 // https://github.com/mikhvas/XML/blob/main/bagreport.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
 // git pull
 TXT
 1. Создать внешний репозиторий c названием TXT.
 // https://github.com/mikhvas/TXT
 2. Клонировать репозиторий TXT на локальный компьютер.
 // git clone https://github.com/mikhvas/TXT
 3. Внутри локального TXT создать файл “new.txt”.
 // vim new.txt
 4. Добавить файл под гит.
 // git add new.txt
 5. Закоммитить файл.
 // git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
 // git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 // vim new.txt
 // https://github.com/mikhvas/TXT/blob/main/new.txt
 8. Отправить изменения на внешний репозиторий.
 // git add new.txt
 // git commit -m "change file new.txt"
 // git push
 9. Создать файл preferences.txt
 // vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 // https://github.com/mikhvas/TXT/blob/main/preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 // vim skills.txt
 12. Сделать коммит в одну строку.
//git commit -am
 13. Отправить сразу 2 файла на внешний репозиторий.
 //git push
 14. На веб интерфейсе создать файл bug_report.txt.
 // https://github.com/mikhvas/TXT/blob/main/bugreport.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
 //git pull
